#--------------------------------------------------------------------------------------------------------------
# Distribution Plot
#--------------------------------------------------------------------------------------------------------------
--> KDE PLot
    sns.distplot(tips['total_bill'],kde = False, bins = 50)
--> Dist Plot
    sns.distplot(tips['total_bill'],kde = False, bins = 50)
--> Rug Plot
    sns.distplot(tips['tip'] , rug=True , kde = false , hist = false)
--> Joint Plot
    sns.jointplot(x ='total_bill' , y ='tip' , data = tips ,kind = 'hex')
    sns.jointplot(x='total_bill',y='tip',data=tips,kind='kde')





#--------------------------------------------------------------------------------------------------------------
# Categorical Plot
#--------------------------------------------------------------------------------------------------------------
--> strip Plot
    sns.stripplot(x = 'day' , y = 'total_bill' , data = tips)
    sns.stripplot(x = 'day' , y = 'total_bill' , jitter = False , data = tips)
--> swarm Plot
    sns.swarmplot(x = 'day' , y = 'total_bill' , hue = 'sex' ,data = tips)
--> box Plot
    sns.boxplot(x = 'day' , y = 'total_bill' ,data = tips)
--> violin Plot
    sns.violinplot(x = 'day' , y = 'total_bill' , hue = 'smoker' ,data = tips)
--> Bar Plot
    sns.barplot(x = 'day' , y = 'total_bill' , hue = 'sex',estimator = np.std , data = tips)
--> Count Plot
    sns.countplot(x= 'day'   , data = tips)
--> Point Plot
    sns.pointplot(x = 'day' , y = 'total_bill' , data = tips)
--> Factor Plot
    sns.factorplot(x = 'sex' , y = 'total_bill' , data = tips)
--> Combining plots
    sns.violinplot(x = 'day' , y = 'total_bill' , data = tips)
    sns.swarmplot(x = 'day' , y = 'total_bill' , color= 'black', size= 3,data = tips)





#--------------------------------------------------------------------------------------------------------------
# Matrix Plot
#--------------------------------------------------------------------------------------------------------------
--> Heat Map
    sns.heatmap(tips.corr() , cmap='coolwarm' , annot= True)
--> Cluster Map
    sns.clustermap(ptf , cmap = 'coolwarm' , linecolor= 'white' , linewidth = 1 , standard_scale= 1 )





#--------------------------------------------------------------------------------------------------------------
# Regression Plot Plot
#--------------------------------------------------------------------------------------------------------------
--> LM plot (Linear Model)
    sns.lmplot(x = 'total_bill' , y = 'tip', hue = 'sex' ,data = tips)





#--------------------------------------------------------------------------------------------------------------
# Axis Grid Plot
#--------------------------------------------------------------------------------------------------------------
--> Facet Grid
    g = sns.FacetGrid( data = tips ,sharey=False, legend_out=True, row = 'time' , col = 'smoker' , hue = 'sex' , size = 6 ,
                  aspect = 0.7 )
    g = g.map(sns.swarmplot  ,'tip' , 'total_bill').add_legend(bbox_to_anchor=(1.25, 0.5))
--> Pair Grid
    g = sns.PairGrid(iris)
    g.map(plt.scatter)
--> Joint Grid
    g = sns.JointGrid(x = 'total_bill' , y = 'tip' , data = tips)
    g.plot(sns.scatterplot , sns.distplot)




